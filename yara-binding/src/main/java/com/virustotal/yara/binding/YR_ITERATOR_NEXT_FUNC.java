// Generated by jextract

package com.virustotal.yara.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*YR_ITERATOR_NEXT_FUNC)(struct YR_ITERATOR* self,struct YR_VALUE_STACK* stack);
 * }
 */
public interface YR_ITERATOR_NEXT_FUNC {

    int apply(java.lang.foreign.MemorySegment config, java.lang.foreign.MemorySegment atom);
    static MemorySegment allocate(YR_ITERATOR_NEXT_FUNC fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(YR_ITERATOR_NEXT_FUNC.class, fi, constants$90.YR_ITERATOR_NEXT_FUNC$FUNC, scope);
    }
    static YR_ITERATOR_NEXT_FUNC ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _config, java.lang.foreign.MemorySegment _atom) -> {
            try {
                return (int)constants$91.YR_ITERATOR_NEXT_FUNC$MH.invokeExact(symbol, _config, _atom);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


