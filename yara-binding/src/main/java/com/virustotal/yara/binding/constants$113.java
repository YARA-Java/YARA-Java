// Generated by jextract

package com.virustotal.yara.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$113 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$113() {}
    static final FunctionDescriptor expm1$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle expm1$MH = RuntimeHelper.downcallHandle(
        "expm1",
        constants$113.expm1$FUNC
    );
    static final FunctionDescriptor __expm1$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __expm1$MH = RuntimeHelper.downcallHandle(
        "__expm1",
        constants$113.__expm1$FUNC
    );
    static final FunctionDescriptor log1p$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle log1p$MH = RuntimeHelper.downcallHandle(
        "log1p",
        constants$113.log1p$FUNC
    );
    static final FunctionDescriptor __log1p$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __log1p$MH = RuntimeHelper.downcallHandle(
        "__log1p",
        constants$113.__log1p$FUNC
    );
    static final FunctionDescriptor logb$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle logb$MH = RuntimeHelper.downcallHandle(
        "logb",
        constants$113.logb$FUNC
    );
    static final FunctionDescriptor __logb$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __logb$MH = RuntimeHelper.downcallHandle(
        "__logb",
        constants$113.__logb$FUNC
    );
}


