// Generated by jextract

package com.virustotal.yara.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$140 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$140() {}
    static final FunctionDescriptor ceilf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle ceilf$MH = RuntimeHelper.downcallHandle(
        "ceilf",
        constants$140.ceilf$FUNC
    );
    static final FunctionDescriptor __ceilf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __ceilf$MH = RuntimeHelper.downcallHandle(
        "__ceilf",
        constants$140.__ceilf$FUNC
    );
    static final FunctionDescriptor fabsf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle fabsf$MH = RuntimeHelper.downcallHandle(
        "fabsf",
        constants$140.fabsf$FUNC
    );
    static final FunctionDescriptor __fabsf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __fabsf$MH = RuntimeHelper.downcallHandle(
        "__fabsf",
        constants$140.__fabsf$FUNC
    );
    static final FunctionDescriptor floorf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle floorf$MH = RuntimeHelper.downcallHandle(
        "floorf",
        constants$140.floorf$FUNC
    );
    static final FunctionDescriptor __floorf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __floorf$MH = RuntimeHelper.downcallHandle(
        "__floorf",
        constants$140.__floorf$FUNC
    );
}


