// Generated by jextract

package com.virustotal.yara.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class yara_h_2 extends yara_h_1 {

    /**
     * {@snippet :
     * #define PTHREAD_CANCELED -1
     * }
     */
    public static MemorySegment PTHREAD_CANCELED() {
        return constants$192.PTHREAD_CANCELED$ADDR;
    }
    /**
     * {@snippet :
     * #define PTHREAD_BARRIER_SERIAL_THREAD -1
     * }
     */
    public static int PTHREAD_BARRIER_SERIAL_THREAD() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define RE_MAX_RANGE 32767
     * }
     */
    public static int RE_MAX_RANGE() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define YR_VERSION "4.2.3"
     * }
     */
    public static MemorySegment YR_VERSION() {
        return constants$193.YR_VERSION$SEGMENT;
    }
    /**
     * {@snippet :
     * #define YR_VERSION_HEX 262659
     * }
     */
    public static int YR_VERSION_HEX() {
        return (int)262659L;
    }
    /**
     * {@snippet :
     * #define HUGE_VAL Infinity
     * }
     */
    public static double HUGE_VAL() {
        return Double.valueOf("Infinity");
    }
    /**
     * {@snippet :
     * #define HUGE_VALF Infinity
     * }
     */
    public static float HUGE_VALF() {
        return Float.valueOf("Infinity");
    }
    /**
     * {@snippet :
     * #define INFINITY Infinity
     * }
     */
    public static float INFINITY() {
        return Float.valueOf("Infinity");
    }
    /**
     * {@snippet :
     * #define NAN NaN
     * }
     */
    public static float NAN() {
        return Float.valueOf("NaN");
    }
    /**
     * {@snippet :
     * #define __GLIBC_FLT_EVAL_METHOD 0
     * }
     */
    public static int __GLIBC_FLT_EVAL_METHOD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FP_ILOGB0 -2147483648
     * }
     */
    public static int FP_ILOGB0() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define FP_ILOGBNAN -2147483648
     * }
     */
    public static int FP_ILOGBNAN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define math_errhandling 3
     * }
     */
    public static int math_errhandling() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define M_E 2.718281828459045
     * }
     */
    public static double M_E() {
        return 2.718281828459045d;
    }
    /**
     * {@snippet :
     * #define M_LOG2E 1.4426950408889634
     * }
     */
    public static double M_LOG2E() {
        return 1.4426950408889634d;
    }
    /**
     * {@snippet :
     * #define M_LOG10E 0.4342944819032518
     * }
     */
    public static double M_LOG10E() {
        return 0.4342944819032518d;
    }
    /**
     * {@snippet :
     * #define M_LN2 0.6931471805599453
     * }
     */
    public static double M_LN2() {
        return 0.6931471805599453d;
    }
    /**
     * {@snippet :
     * #define M_LN10 2.302585092994046
     * }
     */
    public static double M_LN10() {
        return 2.302585092994046d;
    }
    /**
     * {@snippet :
     * #define M_PI 3.141592653589793
     * }
     */
    public static double M_PI() {
        return 3.141592653589793d;
    }
    /**
     * {@snippet :
     * #define M_PI_2 1.5707963267948966
     * }
     */
    public static double M_PI_2() {
        return 1.5707963267948966d;
    }
    /**
     * {@snippet :
     * #define M_PI_4 0.7853981633974483
     * }
     */
    public static double M_PI_4() {
        return 0.7853981633974483d;
    }
    /**
     * {@snippet :
     * #define M_1_PI 0.3183098861837907
     * }
     */
    public static double M_1_PI() {
        return 0.3183098861837907d;
    }
    /**
     * {@snippet :
     * #define M_2_PI 0.6366197723675814
     * }
     */
    public static double M_2_PI() {
        return 0.6366197723675814d;
    }
    /**
     * {@snippet :
     * #define M_2_SQRTPI 1.1283791670955126
     * }
     */
    public static double M_2_SQRTPI() {
        return 1.1283791670955126d;
    }
    /**
     * {@snippet :
     * #define M_SQRT2 1.4142135623730951
     * }
     */
    public static double M_SQRT2() {
        return 1.4142135623730951d;
    }
    /**
     * {@snippet :
     * #define M_SQRT1_2 0.7071067811865476
     * }
     */
    public static double M_SQRT1_2() {
        return 0.7071067811865476d;
    }
    /**
     * {@snippet :
     * #define YR_UNDEFINED -1483400188077313
     * }
     */
    public static long YR_UNDEFINED() {
        return -1483400188077313L;
    }
    /**
     * {@snippet :
     * #define OP_INT_EQ 100
     * }
     */
    public static int OP_INT_EQ() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define OP_INT_NEQ 101
     * }
     */
    public static int OP_INT_NEQ() {
        return (int)101L;
    }
    /**
     * {@snippet :
     * #define OP_INT_LT 102
     * }
     */
    public static int OP_INT_LT() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * #define OP_INT_GT 103
     * }
     */
    public static int OP_INT_GT() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * #define OP_INT_LE 104
     * }
     */
    public static int OP_INT_LE() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * #define OP_INT_GE 105
     * }
     */
    public static int OP_INT_GE() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * #define OP_INT_ADD 106
     * }
     */
    public static int OP_INT_ADD() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * #define OP_INT_SUB 107
     * }
     */
    public static int OP_INT_SUB() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * #define OP_INT_MUL 108
     * }
     */
    public static int OP_INT_MUL() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * #define OP_INT_DIV 109
     * }
     */
    public static int OP_INT_DIV() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * #define OP_INT_MINUS 110
     * }
     */
    public static int OP_INT_MINUS() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * #define OP_INT_END 110
     * }
     */
    public static int OP_INT_END() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_EQ 120
     * }
     */
    public static int OP_DBL_EQ() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_NEQ 121
     * }
     */
    public static int OP_DBL_NEQ() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_LT 122
     * }
     */
    public static int OP_DBL_LT() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_GT 123
     * }
     */
    public static int OP_DBL_GT() {
        return (int)123L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_LE 124
     * }
     */
    public static int OP_DBL_LE() {
        return (int)124L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_GE 125
     * }
     */
    public static int OP_DBL_GE() {
        return (int)125L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_ADD 126
     * }
     */
    public static int OP_DBL_ADD() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_SUB 127
     * }
     */
    public static int OP_DBL_SUB() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_MUL 128
     * }
     */
    public static int OP_DBL_MUL() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_DIV 129
     * }
     */
    public static int OP_DBL_DIV() {
        return (int)129L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_MINUS 130
     * }
     */
    public static int OP_DBL_MINUS() {
        return (int)130L;
    }
    /**
     * {@snippet :
     * #define OP_DBL_END 130
     * }
     */
    public static int OP_DBL_END() {
        return (int)130L;
    }
    /**
     * {@snippet :
     * #define OP_STR_EQ 140
     * }
     */
    public static int OP_STR_EQ() {
        return (int)140L;
    }
    /**
     * {@snippet :
     * #define OP_STR_NEQ 141
     * }
     */
    public static int OP_STR_NEQ() {
        return (int)141L;
    }
    /**
     * {@snippet :
     * #define OP_STR_LT 142
     * }
     */
    public static int OP_STR_LT() {
        return (int)142L;
    }
    /**
     * {@snippet :
     * #define OP_STR_GT 143
     * }
     */
    public static int OP_STR_GT() {
        return (int)143L;
    }
    /**
     * {@snippet :
     * #define OP_STR_LE 144
     * }
     */
    public static int OP_STR_LE() {
        return (int)144L;
    }
    /**
     * {@snippet :
     * #define OP_STR_GE 145
     * }
     */
    public static int OP_STR_GE() {
        return (int)145L;
    }
    /**
     * {@snippet :
     * #define OP_STR_END 145
     * }
     */
    public static int OP_STR_END() {
        return (int)145L;
    }
    /**
     * {@snippet :
     * #define OP_INT8 240
     * }
     */
    public static int OP_INT8() {
        return (int)240L;
    }
    /**
     * {@snippet :
     * #define OP_INT16 241
     * }
     */
    public static int OP_INT16() {
        return (int)241L;
    }
    /**
     * {@snippet :
     * #define OP_INT32 242
     * }
     */
    public static int OP_INT32() {
        return (int)242L;
    }
    /**
     * {@snippet :
     * #define OP_UINT8 243
     * }
     */
    public static int OP_UINT8() {
        return (int)243L;
    }
    /**
     * {@snippet :
     * #define OP_UINT16 244
     * }
     */
    public static int OP_UINT16() {
        return (int)244L;
    }
    /**
     * {@snippet :
     * #define OP_UINT32 245
     * }
     */
    public static int OP_UINT32() {
        return (int)245L;
    }
    /**
     * {@snippet :
     * #define OP_INT8BE 246
     * }
     */
    public static int OP_INT8BE() {
        return (int)246L;
    }
    /**
     * {@snippet :
     * #define OP_INT16BE 247
     * }
     */
    public static int OP_INT16BE() {
        return (int)247L;
    }
    /**
     * {@snippet :
     * #define OP_INT32BE 248
     * }
     */
    public static int OP_INT32BE() {
        return (int)248L;
    }
    /**
     * {@snippet :
     * #define OP_UINT8BE 249
     * }
     */
    public static int OP_UINT8BE() {
        return (int)249L;
    }
    /**
     * {@snippet :
     * #define OP_UINT16BE 250
     * }
     */
    public static int OP_UINT16BE() {
        return (int)250L;
    }
    /**
     * {@snippet :
     * #define OP_UINT32BE 251
     * }
     */
    public static int OP_UINT32BE() {
        return (int)251L;
    }
}


