// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*RE_MATCH_CALLBACK_FUNC)(unsigned char* match,int match_length,int flags,void* args);
 * }
 */
public interface RE_MATCH_CALLBACK_FUNC {

    int apply(java.lang.foreign.MemorySegment match, int match_length, int flags, java.lang.foreign.MemorySegment args);
    static MemorySegment allocate(RE_MATCH_CALLBACK_FUNC fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(RE_MATCH_CALLBACK_FUNC.class, fi, constants$91.RE_MATCH_CALLBACK_FUNC$FUNC, scope);
    }
    static RE_MATCH_CALLBACK_FUNC ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _match, int _match_length, int _flags, java.lang.foreign.MemorySegment _args) -> {
            try {
                return (int)constants$91.RE_MATCH_CALLBACK_FUNC$MH.invokeExact(symbol, _match, _match_length, _flags, _args);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


