// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct YR_MEMORY_BLOCK* (*YR_MEMORY_BLOCK_ITERATOR_FUNC)(struct YR_MEMORY_BLOCK_ITERATOR* self);
 * }
 */
public interface YR_MEMORY_BLOCK_ITERATOR_FUNC {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment self);
    static MemorySegment allocate(YR_MEMORY_BLOCK_ITERATOR_FUNC fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(YR_MEMORY_BLOCK_ITERATOR_FUNC.class, fi, constants$89.YR_MEMORY_BLOCK_ITERATOR_FUNC$FUNC, scope);
    }
    static YR_MEMORY_BLOCK_ITERATOR_FUNC ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _self) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$89.YR_MEMORY_BLOCK_ITERATOR_FUNC$MH.invokeExact(symbol, _self);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


