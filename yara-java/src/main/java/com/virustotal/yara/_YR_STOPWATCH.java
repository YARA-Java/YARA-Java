// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _YR_STOPWATCH {
 *     union {
 *         struct timeval tv_start;
 *         struct timespec ts_start;
 *     };
 * };
 * }
 */
public class _YR_STOPWATCH {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG_LONG$LAYOUT.withName("tv_sec"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("tv_usec")
            ).withName("tv_start"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG_LONG$LAYOUT.withName("tv_sec"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("tv_nsec")
            ).withName("ts_start")
        ).withName("$anon$0")
    ).withName("_YR_STOPWATCH");
    public static MemoryLayout $LAYOUT() {
        return _YR_STOPWATCH.$struct$LAYOUT;
    }
    public static MemorySegment tv_start$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment ts_start$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


