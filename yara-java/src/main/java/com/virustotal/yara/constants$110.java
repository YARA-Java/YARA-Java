// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$110 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$110() {}
    static final FunctionDescriptor acosh$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle acosh$MH = RuntimeHelper.downcallHandle(
        "acosh",
        constants$110.acosh$FUNC
    );
    static final FunctionDescriptor __acosh$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __acosh$MH = RuntimeHelper.downcallHandle(
        "__acosh",
        constants$110.__acosh$FUNC
    );
    static final FunctionDescriptor asinh$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle asinh$MH = RuntimeHelper.downcallHandle(
        "asinh",
        constants$110.asinh$FUNC
    );
    static final FunctionDescriptor __asinh$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __asinh$MH = RuntimeHelper.downcallHandle(
        "__asinh",
        constants$110.__asinh$FUNC
    );
    static final FunctionDescriptor atanh$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle atanh$MH = RuntimeHelper.downcallHandle(
        "atanh",
        constants$110.atanh$FUNC
    );
    static final FunctionDescriptor __atanh$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __atanh$MH = RuntimeHelper.downcallHandle(
        "__atanh",
        constants$110.__atanh$FUNC
    );
}


