// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$121 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$121() {}
    static final FunctionDescriptor __yn$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __yn$MH = RuntimeHelper.downcallHandle(
        "__yn",
        constants$121.__yn$FUNC
    );
    static final FunctionDescriptor erf$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle erf$MH = RuntimeHelper.downcallHandle(
        "erf",
        constants$121.erf$FUNC
    );
    static final FunctionDescriptor __erf$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __erf$MH = RuntimeHelper.downcallHandle(
        "__erf",
        constants$121.__erf$FUNC
    );
    static final FunctionDescriptor erfc$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle erfc$MH = RuntimeHelper.downcallHandle(
        "erfc",
        constants$121.erfc$FUNC
    );
    static final FunctionDescriptor __erfc$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle __erfc$MH = RuntimeHelper.downcallHandle(
        "__erfc",
        constants$121.__erfc$FUNC
    );
    static final FunctionDescriptor lgamma$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle lgamma$MH = RuntimeHelper.downcallHandle(
        "lgamma",
        constants$121.lgamma$FUNC
    );
}


