// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$136 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$136() {}
    static final FunctionDescriptor logf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle logf$MH = RuntimeHelper.downcallHandle(
        "logf",
        constants$136.logf$FUNC
    );
    static final FunctionDescriptor __logf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __logf$MH = RuntimeHelper.downcallHandle(
        "__logf",
        constants$136.__logf$FUNC
    );
    static final FunctionDescriptor log10f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle log10f$MH = RuntimeHelper.downcallHandle(
        "log10f",
        constants$136.log10f$FUNC
    );
    static final FunctionDescriptor __log10f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __log10f$MH = RuntimeHelper.downcallHandle(
        "__log10f",
        constants$136.__log10f$FUNC
    );
    static final FunctionDescriptor modff$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle modff$MH = RuntimeHelper.downcallHandle(
        "modff",
        constants$136.modff$FUNC
    );
    static final FunctionDescriptor __modff$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle __modff$MH = RuntimeHelper.downcallHandle(
        "__modff",
        constants$136.__modff$FUNC
    );
}


