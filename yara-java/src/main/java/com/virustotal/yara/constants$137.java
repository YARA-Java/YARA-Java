// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$137 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$137() {}
    static final FunctionDescriptor expm1f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle expm1f$MH = RuntimeHelper.downcallHandle(
        "expm1f",
        constants$137.expm1f$FUNC
    );
    static final FunctionDescriptor __expm1f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __expm1f$MH = RuntimeHelper.downcallHandle(
        "__expm1f",
        constants$137.__expm1f$FUNC
    );
    static final FunctionDescriptor log1pf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle log1pf$MH = RuntimeHelper.downcallHandle(
        "log1pf",
        constants$137.log1pf$FUNC
    );
    static final FunctionDescriptor __log1pf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __log1pf$MH = RuntimeHelper.downcallHandle(
        "__log1pf",
        constants$137.__log1pf$FUNC
    );
    static final FunctionDescriptor logbf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle logbf$MH = RuntimeHelper.downcallHandle(
        "logbf",
        constants$137.logbf$FUNC
    );
    static final FunctionDescriptor __logbf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __logbf$MH = RuntimeHelper.downcallHandle(
        "__logbf",
        constants$137.__logbf$FUNC
    );
}


