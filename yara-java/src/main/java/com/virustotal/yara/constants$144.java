// Generated by jextract

package com.virustotal.yara;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$144 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$144() {}
    static final FunctionDescriptor __jnf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __jnf$MH = RuntimeHelper.downcallHandle(
        "__jnf",
        constants$144.__jnf$FUNC
    );
    static final FunctionDescriptor y0f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle y0f$MH = RuntimeHelper.downcallHandle(
        "y0f",
        constants$144.y0f$FUNC
    );
    static final FunctionDescriptor __y0f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __y0f$MH = RuntimeHelper.downcallHandle(
        "__y0f",
        constants$144.__y0f$FUNC
    );
    static final FunctionDescriptor y1f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle y1f$MH = RuntimeHelper.downcallHandle(
        "y1f",
        constants$144.y1f$FUNC
    );
    static final FunctionDescriptor __y1f$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle __y1f$MH = RuntimeHelper.downcallHandle(
        "__y1f",
        constants$144.__y1f$FUNC
    );
    static final FunctionDescriptor ynf$FUNC = FunctionDescriptor.of(Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle ynf$MH = RuntimeHelper.downcallHandle(
        "ynf",
        constants$144.ynf$FUNC
    );
}


